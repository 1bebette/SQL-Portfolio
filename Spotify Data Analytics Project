# This project analyzes the top 50 songs on Spotify in 2021. 
# The data was derived from https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021/
# After downloading the data from Kaggle, I created a table containing the data. 


#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Here are a few questions I asked, and answered, about the data:

# How long are the top 10 most popular songs and who are the artists?
SELECT track_name, artist_name, duration_ms
FROM BIT_DB.Spotifydata
order by popularity DESC
limit 10;


# What artist(s) has the most songs on this list?
SELECT artist_name, count(artist_name) as song_count
FROM BIT_DB.Spotifydata
GROUP BY artist_name
order by song_count DESC
LIMIT 2;


# Classify the optimum workout intensity level for each song and organize them from highest to lowest intensity. 
SELECT track_name, artist_name,
CASE 
    WHEN tempo >= "140" THEN "high_intesity"
    WHEN tempo >= "100" THEN "mid_intensity"
    ELSE "low_intensity" END as " workout_intensity_level"
FROM BIT_DB.Spotifydata
Order BY tempo DESC;


# What's the average danceability for the 10 most popular songs?
SELECT avg(danceability) as Top_10_AVG_Danceability
FROM (
    SELECT * FROM Spotifydata 
    ORDER BY popularity DESC
    LIMIT 10);


# What's the shortest song? 
SELECT track_name
from Spotifydata
ORDER BY duration_ms asc
limit 1;
